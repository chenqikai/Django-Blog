通常当我们谈到开发网站时，主要谈论的是HTML。 当然，Web远不只有HTML，我们在Web上用多种格式来发布数据： RSS、PDF、图片等。

到目前为止，我们的注意力都是放在常见 HTML 代码生成上，但是在这一章中，我们将会对使用 Django 生成其它格式的内容进行简要介绍。

Django拥有一些便利的内建工具帮助你生成常见的非HTML内容：

RSS/Atom 聚合文件

站点地图 （一个XML格式文件，最初由Google开发，用于给搜索引擎提示线索）

我们稍后会逐一研究这些工具，不过首先让我们来了解些基础原理。

基础： 视图和MIME类型
回顾一下第三章，视图函数只是一个以Web请求为参数并返回Web响应的Python函数。 这个响应可以是一个Web页面的HTML内容，或者一个跳转，或者一个404 错误，或者一个XML文档，或者一幅图片，或者映射到任何东西上。

更正式的说，一个Django视图函数 必须

接受一个 HttpRequest 实例作为它的第一个参数

返回一个 HttpResponse 实例

从一个视图返回一个非 HTML 内容的关键是在构造一个 HttpResponse 类时，需要指定 mimetype 参数。 通过改变 MIME 类型，我们可以通知浏览器将要返回的数据是另一种类型。

下面我们以返回一张PNG图片的视图为例。 为了使事情能尽可能的简单，我们只是读入一张存储在磁盘上的图片：

就是这么简单。 如果改变 open() 中的图片路径为一张真实图片的路径，那么就可以使用这个十分简单的视图来提供一张图片，并且浏览器可以正确显示它。

另外我们必须了解的是HttpResponse对象实现了Python标准的文件应用程序接口(API)。 这就是说你可以在Python（或第三方库）任何用到文件的地方使用”HttpResponse”实例。

下面将用 Django 生成 CSV 文件为例，说明它的工作原理。

生成 CSV 文件
CSV 是一种简单的数据格式，通常为电子表格软件所使用。 它主要是由一系列的表格行组成，每行中单元格之间使用逗号(CSV 是 逗号分隔数值(comma-separated values) 的缩写)隔开。例如，下面是CSV格式的“不守规矩”的飞机乘客表。

代码和注释可以说是很清楚，但还有一些事情需要特别注意：

响应返回的是 text/csv MIME类型（而非默认的 text/html ）。这会告诉浏览器，返回的文档是CSV文件。

响应会有一个附加的 Content-Disposition 头部，它包含有CSV文件的文件名。 这个头部（或者说，附加部分）会指示浏览器弹出对话框询问文件存放的位置（而不仅仅是显示）。 这个文件名是任意的。 它会显示在浏览器的另存为对话框中。

要在HttpResponse指定头部信息，只需把HttpResponse当做字典使用就可以了。

与创建CSV的应用程序界面（API）挂接是很容易的： 只需将 response 作为第一个变量传递给 csv.writer 。 csv.writer 函数需要一个文件类的对象， HttpResponse 正好能达成这个目的。

调用 writer.writerow ，并且传递给它一个类似 list 或者 tuple 的可迭代对象，就可以在 CSV 文件中写入一行。

CSV 模块考虑到了引用的问题，所以您不用担心逸出字符串中引号和逗号。 只要把信息传递给 writerow() ，它会处理好所有的事情。

在任何需要返回非 HTML 内容的时候，都需要经过以下几步： 创建一个 HttpResponse 响应对象（需要指定特殊的 MIME 类型），它它传给需要处理文件的函数，然后返回这个响应对象。2

下面是一些其它的例子。